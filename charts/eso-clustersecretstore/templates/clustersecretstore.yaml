apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ .Values.name }}
spec:
  provider:
    vault:
      server: {{ .Values.vault.server }}
      path: {{ .Values.vault.path }}
      version: {{ .Values.vault.version }}
      auth:
        # VaultJwt authenticates with Vault using the JWT/OIDC auth mechanism
        # https://www.vaultproject.io/docs/auth/jwt
        jwt:
          # Path where the JWT authentication backend is mounted
          path: {{ .Values.vault.auth.jwt.path }}
          # JWT role configured in a Vault server, optional.
          role: {{ .Values.vault.auth.jwt.role }}
          kubernetesServiceAccountToken:
            serviceAccountRef:
              name: {{ .Values.vault.auth.jwt.sa }}
              namespace: {{ .Values.namespace }}
            # `expirationSeconds` defaults to 10 minutes if not supplied
            expirationSeconds: {{ .Values.vault.auth.jwt.expiration }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.vault.auth.jwt.sa }}-auth-delegator
  labels:
    app: {{ .Values.vault.server }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: {{ .Values.vault.auth.jwt.sa }}
  namespace: {{ .Values.namespace }}